(window["webpackJsonpreact-hooks-demo"]=window["webpackJsonpreact-hooks-demo"]||[]).push([[10],{195:function(t,n,e){"use strict";function r(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}function o(t,n){return function(t){if(Array.isArray(t))return t}(t)||function(t,n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t)){var e=[],r=!0,o=!1,a=void 0;try{for(var u,c=t[Symbol.iterator]();!(r=(u=c.next()).done)&&(e.push(u.value),!n||e.length!==n);r=!0);}catch(i){o=!0,a=i}finally{try{r||null==c.return||c.return()}finally{if(o)throw a}}return e}}(t,n)||function(t,n){if(t){if("string"===typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(e):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(t,n):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}e.d(n,"a",(function(){return o}))},414:function(t,n,e){"use strict";e.r(n);e(199);var r=e(200),o=e(195),a=e(0),u=e.n(a),c=e(418),i=e(413);n.default=function(){var t=Object(a.useState)(0),n=Object(o.a)(t,2),e=n[0],l=n[1];return u.a.createElement(u.a.Fragment,null,u.a.createElement("div",{className:"top"},u.a.createElement("div",null,"You clicked ",e," Times!"),u.a.createElement(r.a,{type:"primary",shape:"round",icon:"plus",onClick:function(){return l(e+1)}},"Click"),u.a.createElement(r.a,{type:"primary",shape:"round",icon:"arrow-left",onClick:function(){return l(0)}},"Reset")),u.a.createElement("div",{className:"code"},u.a.createElement(c.a,{language:"react",showLineNumbers:!0,style:i.a},'import React, { useState } from \'react\';\nimport { Button } from \'antd\';\n  \n  const UseState = () => {\n    const [count, setCount] = useState(0);\n    return (\n      <>\n        <div>\n          You clicked {count} Times!\n        </div>\n        <Button \n          type="primary" \n          shape="round" \n          icon="plus" \n          onClick={() => setCount(count + 1)}\n        >\n          Click\n        </Button>\n        <Button\n          type="primary"\n          shape="round"\n          icon="arrow-left"\n          onClick={() => setCount(0)}\n        >\n          Reset\n        </Button>\n      </>\n    )\n  }\n  export default UseState;')))}}}]);
//# sourceMappingURL=10.4714262f.chunk.js.map