(window["webpackJsonpreact-hooks-demo"]=window["webpackJsonpreact-hooks-demo"]||[]).push([[12],{421:function(n,e,t){"use strict";t.r(e);t(199);var o,r,c,u,a,i=t(200),s=t(0),p=t.n(s),l=t(417),b=t(405),m=t(406),d=t(407),y=t(408),f=(t(409),t(194)),C=(o=f.b.bound,r=f.b.bound,c=f.b.bound,u=function(){function n(){Object(m.a)(this,n),Object(b.a)(this,"count",a,this)}return Object(d.a)(n,[{key:"increment",value:function(){this.count++}},{key:"decrease",value:function(){this.count--}},{key:"set",value:function(n){this.count=n}},{key:"doubleCount",get:function(){return 2*this.count}}]),n}(),a=Object(y.a)(u.prototype,"count",[f.f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Object(y.a)(u.prototype,"doubleCount",[f.c],Object.getOwnPropertyDescriptor(u.prototype,"doubleCount"),u.prototype),Object(y.a)(u.prototype,"increment",[o],Object.getOwnPropertyDescriptor(u.prototype,"increment"),u.prototype),Object(y.a)(u.prototype,"decrease",[r],Object.getOwnPropertyDescriptor(u.prototype,"decrease"),u.prototype),Object(y.a)(u.prototype,"set",[c],Object.getOwnPropertyDescriptor(u.prototype,"set"),u.prototype),u),h=t(418),w=t(413);e.default=function(){var n=Object(l.a)((function(){return new C}));return Object(l.b)((function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement("p",null,"count:",n.count),p.a.createElement("p",null,"doubleCount:",n.doubleCount),p.a.createElement(i.a,{type:"primary",shape:"round",icon:"plus",onClick:function(){return n.increment()}},"Count Up"),p.a.createElement(i.a,{type:"primary",shape:"round",icon:"minus",onClick:function(){return n.decrease()}},"Count Down"),p.a.createElement(i.a,{type:"danger",shape:"round",icon:"warning",onClick:function(){return n.set(0)}},"Reset Count"),p.a.createElement("div",{className:"code"},p.a.createElement(h.a,{language:"react",showLineNumbers:!0,style:w.a},"yarn add mobx mobx-react\n# mobx-react 6.x or mobx-react-lite@1.4.0")),p.a.createElement("div",{className:"code"},p.a.createElement(h.a,{language:"react",showLineNumbers:!0,style:w.a},'// index.jsx\n  import React from \'react\';\n  import { useObserver, useLocalStore } from \'mobx-react\';\n  import { Button } from \'antd\';\n  import Count from \'./countStore\';\n  \n  const MobxHooks = () => {\n    const countStore = useLocalStore(() => new Count());\n    return useObserver(() => (\n      <>\n        <p>count:{countStore.count}</p>\n        <p>doubleCount:{countStore.doubleCount}</p>\n        <Button\n          type="primary"\n          shape="round"\n          icon="plus"\n          onClick={() => countStore.increment()}\n        >\n          Count Up\n        </Button>\n        <Button\n          type="primary"\n          shape="round"\n          icon="minus"\n          onClick={() => countStore.decrease()}\n        >\n          Count Down\n        </Button>\n        <Button\n          type="danger"\n          shape="round"\n          icon="warning"\n          onClick={() => countStore.set(0)}\n        >\n          Reset Count\n        </Button>\n      </>\n    ));\n  };\n  export default MobxHooks;')),p.a.createElement("div",{className:"code"},p.a.createElement(h.a,{language:"react",showLineNumbers:!0,style:w.a},"// countStore.js\n  import { observable, action, computed } from 'mobx';\n  \n  class Count {\n    @observable\n    count = 0;\n  \n    @computed\n    get doubleCount() {\n      return this.count * 2;\n    }\n  \n    @action.bound\n    increment() {\n      this.count++;\n    }\n  \n    @action.bound\n    decrease() {\n      this.count--;\n    }\n  \n    @action.bound\n    set(num) {\n      this.count = num;\n    }\n  }\n  \n  export default Count;")))}))}}}]);
//# sourceMappingURL=12.8076cc39.chunk.js.map