{"version":3,"sources":["pages/mobx-hooks/countStore.js","pages/mobx-hooks/index.jsx"],"names":["Count","action","bound","this","count","num","observable","computed","MobxHooks","countStore","useLocalStore","useObserver","doubleCount","type","shape","icon","onClick","increment","decrease","set","className","language","showLineNumbers","style","tomorrowNight"],"mappings":"qPA6BeA,G,EAlBZC,IAAOC,M,EAKPD,IAAOC,M,EAKPD,IAAOC,M,uIARNC,KAAKC,U,iCAKLD,KAAKC,U,0BAIHC,GACFF,KAAKC,MAAQC,I,kCAfb,OAAoB,EAAbF,KAAKC,U,wCALbE,K,yEACO,K,uCAEPC,K,yZCoIYC,UAnIG,WAChB,IAuEMC,EAAaC,aAAc,kBAAM,IAAIV,KAC3C,OAAOW,aAAY,kBACjB,oCACE,oCAAUF,EAAWL,OACrB,0CAAgBK,EAAWG,aAC3B,uBACEC,KAAK,UACLC,MAAM,QACNC,KAAK,OACLC,QAAS,kBAAMP,EAAWQ,cAJ5B,YAQA,uBACEJ,KAAK,UACLC,MAAM,QACNC,KAAK,QACLC,QAAS,kBAAMP,EAAWS,aAJ5B,cAQA,uBACEL,KAAK,SACLC,MAAM,QACNC,KAAK,UACLC,QAAS,kBAAMP,EAAWU,IAAI,KAJhC,eAQA,yBAAKC,UAAU,QACb,kBAAC,IAAD,CACEC,SAAS,QACTC,iBAAe,EACfC,MAAOC,KAxGC,wEA6GZ,yBAAKJ,UAAU,QACb,kBAAC,IAAD,CACEC,SAAS,QACTC,iBAAe,EACfC,MAAOC,KAlFC,mhCAuFZ,yBAAKJ,UAAU,QACb,kBAAC,IAAD,CACEC,SAAS,QACTC,iBAAe,EACfC,MAAOC,KAxHC","file":"static/js/12.8076cc39.chunk.js","sourcesContent":["import { observable, action, computed } from 'mobx';\n\nclass Count {\n  @observable\n  count = 0;\n\n  @computed\n  get doubleCount() {\n    return this.count * 2;\n  }\n\n  @action.bound\n  increment() {\n    this.count++;\n  }\n\n  @action.bound\n  decrease() {\n    this.count--;\n  }\n\n  @action.bound\n  set(num) {\n    this.count = num;\n  }\n}\n\n\n\nexport default Count;\n","import React from 'react';\nimport { useObserver, useLocalStore } from 'mobx-react';\nimport { Button } from 'antd';\nimport Count from './countStore';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst MobxHooks = () => {\n  const shallCode=`yarn add mobx mobx-react\n# mobx-react 6.x or mobx-react-lite@1.4.0`\n  const countCode=`// countStore.js\n  import { observable, action, computed } from 'mobx';\n  \n  class Count {\n    @observable\n    count = 0;\n  \n    @computed\n    get doubleCount() {\n      return this.count * 2;\n    }\n  \n    @action.bound\n    increment() {\n      this.count++;\n    }\n  \n    @action.bound\n    decrease() {\n      this.count--;\n    }\n  \n    @action.bound\n    set(num) {\n      this.count = num;\n    }\n  }\n  \n  export default Count;`\n  const indexCode=`// index.jsx\n  import React from 'react';\n  import { useObserver, useLocalStore } from 'mobx-react';\n  import { Button } from 'antd';\n  import Count from './countStore';\n  \n  const MobxHooks = () => {\n    const countStore = useLocalStore(() => new Count());\n    return useObserver(() => (\n      <>\n        <p>count:{countStore.count}</p>\n        <p>doubleCount:{countStore.doubleCount}</p>\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          icon=\"plus\"\n          onClick={() => countStore.increment()}\n        >\n          Count Up\n        </Button>\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          icon=\"minus\"\n          onClick={() => countStore.decrease()}\n        >\n          Count Down\n        </Button>\n        <Button\n          type=\"danger\"\n          shape=\"round\"\n          icon=\"warning\"\n          onClick={() => countStore.set(0)}\n        >\n          Reset Count\n        </Button>\n      </>\n    ));\n  };\n  export default MobxHooks;`\n  const countStore = useLocalStore(() => new Count());\n  return useObserver(() => (\n    <>\n      <p>count:{countStore.count}</p>\n      <p>doubleCount:{countStore.doubleCount}</p>\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        icon=\"plus\"\n        onClick={() => countStore.increment()}\n      >\n        Count Up\n      </Button>\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        icon=\"minus\"\n        onClick={() => countStore.decrease()}\n      >\n        Count Down\n      </Button>\n      <Button\n        type=\"danger\"\n        shape=\"round\"\n        icon=\"warning\"\n        onClick={() => countStore.set(0)}\n      >\n        Reset Count\n      </Button>\n      <div className=\"code\">\n        <SyntaxHighlighter\n          language=\"react\"\n          showLineNumbers\n          style={tomorrowNight}\n        >\n          {shallCode}\n        </SyntaxHighlighter>\n      </div>\n      <div className=\"code\">\n        <SyntaxHighlighter\n          language=\"react\"\n          showLineNumbers\n          style={tomorrowNight}\n        >\n          {indexCode}\n        </SyntaxHighlighter>\n      </div>\n      <div className=\"code\">\n        <SyntaxHighlighter\n          language=\"react\"\n          showLineNumbers\n          style={tomorrowNight}\n        >\n          {countCode}\n        </SyntaxHighlighter>\n      </div>\n    </>\n  ));\n};\nexport default MobxHooks;\n"],"sourceRoot":""}